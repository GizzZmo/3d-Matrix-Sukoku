version: '3.8'

services:
  # C++ High-Performance Sudoku Solver
  sudoku-solver:
    build:
      context: .
      dockerfile: docker/Dockerfile.cpp
    ports:
      - "8081:8081"
    networks:
      - sudoku-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # C# User Management Service
  user-management:
    build:
      context: .
      dockerfile: docker/Dockerfile.csharp
    ports:
      - "8082:8082"
    networks:
      - sudoku-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/api/users/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PHP Leaderboard Service
  leaderboard:
    build:
      context: .
      dockerfile: docker/Dockerfile.php
    ports:
      - "8083:8083"
    networks:
      - sudoku-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Node.js API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: docker/Dockerfile.gateway
    ports:
      - "8080:8080"
    depends_on:
      - sudoku-solver
      - user-management
      - leaderboard
    networks:
      - sudoku-network
    environment:
      - NODE_ENV=production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Enhanced Frontend with PWA support
  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    ports:
      - "4200:4200"
    depends_on:
      - api-gateway
    networks:
      - sudoku-network
    environment:
      - API_BASE_URL=http://api-gateway:8080

  # Redis for caching and real-time features
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - sudoku-network
    volumes:
      - redis-data:/data

  # MongoDB for persistent data storage
  mongodb:
    image: mongo:7
    ports:
      - "27017:27017"
    networks:
      - sudoku-network
    volumes:
      - mongodb-data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=sudoku
      - MONGO_INITDB_ROOT_PASSWORD=matrix123

  # Nginx reverse proxy with SSL termination
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api-gateway
      - frontend
    networks:
      - sudoku-network
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/ssl:/etc/nginx/ssl

networks:
  sudoku-network:
    driver: bridge

volumes:
  redis-data:
  mongodb-data: